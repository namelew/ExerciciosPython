{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "fatty-scanner",
   "metadata": {},
   "source": [
    "<p align=\"center\">\n",
    "  <img src=\"https://pandas.pydata.org/static/img/pandas_secondary.svg\" width=\"450\">\n",
    "</p>\n",
    "\n",
    "# Visão Geral\n",
    "\n",
    " - Biblioteca para manipulação e análise de dados;\n",
    " - Oferece um conjunto de funções para operar dados tabulares (2D) e séries temporais (1D);\n",
    " - Usado na área de finanças, estatística, ciências sociais, e muitas áreas da engenharia;\n",
    " - Alternativa para a linguagem **R**;\n",
    " \n",
    "# Vantagens\n",
    " \n",
    " - Facilidade em tratar informações faltantes;\n",
    " - Colunas podem ser facilmente excluídas ou adicionadas;\n",
    " - Conversão de tipos;\n",
    " - Visualização dos dados;\n",
    " - Rápido;"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "psychological-diana",
   "metadata": {},
   "source": [
    " \n",
    "# Tipos de Dados\n",
    "## Series\n",
    " \n",
    " - Lista de valores rotulados e de tipo único;\n",
    " - Possuem somente uma dimensão;\n",
    " \n",
    " <img src=\"https://pandas.pydata.org/docs/_images/01_table_series.svg\">\n",
    " <p style=\"text-align:center;\">\n",
    "    <small>\n",
    "        Fonte: Documentação do Pandas [2]\n",
    "    </small>\n",
    " </p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "invisible-toilet",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "batimento_cardiaco = pd.Series([82, 82, 84, 96, 95, 86, 84, 88, 90, 95, 102])\n",
    "batimento_cardiaco"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "painted-boost",
   "metadata": {},
   "source": [
    " ## DataFrame\n",
    "  - Matrix 2D de valores rotulados;\n",
    "  - Tipos diversos;\n",
    "  - Tamanho mutável;\n",
    "  - Semelhante à uma panilha/excel ou uma tabela SQL;\n",
    "  - Cada coluna de um `DataFrame` é do tipo `Series`;\n",
    "  \n",
    "<img src=\"https://pandas.pydata.org/docs/_images/01_table_dataframe1.svg\" />\n",
    "<p style=\"text-align:center;\">    \n",
    "    <small>\n",
    "        <b>Fonte</b>:\n",
    "        Documentação do Pandas [2]\n",
    "    </small>\n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "comparative-intellectual",
   "metadata": {},
   "source": [
    "# Lendo um dataset\n",
    "![](https://pandas.pydata.org/docs/_images/02_io_readwrite1.svg)\n",
    "<p style=\"text-align:center;\">\n",
    "    <small>\n",
    "        <b>Fonte</b>:\n",
    "        Documentação do Pandas [1]\n",
    "    </small>\n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "beautiful-cancellation",
   "metadata": {},
   "source": [
    " #### Lendo dados de um arquivo CSV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "exact-corps",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>iso_code</th>\n",
       "      <th>date</th>\n",
       "      <th>total_vaccinations</th>\n",
       "      <th>people_vaccinated</th>\n",
       "      <th>people_fully_vaccinated</th>\n",
       "      <th>daily_vaccinations_raw</th>\n",
       "      <th>daily_vaccinations</th>\n",
       "      <th>total_vaccinations_per_hundred</th>\n",
       "      <th>people_vaccinated_per_hundred</th>\n",
       "      <th>people_fully_vaccinated_per_hundred</th>\n",
       "      <th>daily_vaccinations_per_million</th>\n",
       "      <th>vaccines</th>\n",
       "      <th>source_name</th>\n",
       "      <th>source_website</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Albania</td>\n",
       "      <td>ALB</td>\n",
       "      <td>2021-01-10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Pfizer/BioNTech</td>\n",
       "      <td>Ministry of Health</td>\n",
       "      <td>https://shendetesia.gov.al/covid19-ministria-e...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>ALB</td>\n",
       "      <td>2021-01-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>64.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22.0</td>\n",
       "      <td>Pfizer/BioNTech</td>\n",
       "      <td>Ministry of Health</td>\n",
       "      <td>https://shendetesia.gov.al/covid19-ministria-e...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Albania</td>\n",
       "      <td>ALB</td>\n",
       "      <td>2021-01-12</td>\n",
       "      <td>128.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>64.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22.0</td>\n",
       "      <td>Pfizer/BioNTech</td>\n",
       "      <td>Ministry of Health</td>\n",
       "      <td>https://shendetesia.gov.al/covid19-ministria-e...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Albania</td>\n",
       "      <td>ALB</td>\n",
       "      <td>2021-01-13</td>\n",
       "      <td>188.0</td>\n",
       "      <td>188.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>60.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22.0</td>\n",
       "      <td>Pfizer/BioNTech</td>\n",
       "      <td>Ministry of Health</td>\n",
       "      <td>https://shendetesia.gov.al/covid19-ministria-e...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   country iso_code        date  total_vaccinations  people_vaccinated  \\\n",
       "0  Albania      ALB  2021-01-10                 0.0                0.0   \n",
       "1  Albania      ALB  2021-01-11                 NaN                NaN   \n",
       "2  Albania      ALB  2021-01-12               128.0              128.0   \n",
       "3  Albania      ALB  2021-01-13               188.0              188.0   \n",
       "\n",
       "   people_fully_vaccinated  daily_vaccinations_raw  daily_vaccinations  \\\n",
       "0                      NaN                     NaN                 NaN   \n",
       "1                      NaN                     NaN                64.0   \n",
       "2                      NaN                     NaN                64.0   \n",
       "3                      NaN                    60.0                63.0   \n",
       "\n",
       "   total_vaccinations_per_hundred  people_vaccinated_per_hundred  \\\n",
       "0                            0.00                           0.00   \n",
       "1                             NaN                            NaN   \n",
       "2                            0.00                           0.00   \n",
       "3                            0.01                           0.01   \n",
       "\n",
       "   people_fully_vaccinated_per_hundred  daily_vaccinations_per_million  \\\n",
       "0                                  NaN                             NaN   \n",
       "1                                  NaN                            22.0   \n",
       "2                                  NaN                            22.0   \n",
       "3                                  NaN                            22.0   \n",
       "\n",
       "          vaccines         source_name  \\\n",
       "0  Pfizer/BioNTech  Ministry of Health   \n",
       "1  Pfizer/BioNTech  Ministry of Health   \n",
       "2  Pfizer/BioNTech  Ministry of Health   \n",
       "3  Pfizer/BioNTech  Ministry of Health   \n",
       "\n",
       "                                      source_website  \n",
       "0  https://shendetesia.gov.al/covid19-ministria-e...  \n",
       "1  https://shendetesia.gov.al/covid19-ministria-e...  \n",
       "2  https://shendetesia.gov.al/covid19-ministria-e...  \n",
       "3  https://shendetesia.gov.al/covid19-ministria-e...  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "dataset = pd.read_csv(\"../datasets/country_vaccinations.csv\")\n",
    "dataset.head(4)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "administrative-cherry",
   "metadata": {},
   "source": [
    "### Mostrando informações sobre o dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "false-telescope",
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "rotary-album",
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dramatic-laser",
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "romance-illinois",
   "metadata": {},
   "source": [
    "\n",
    "# Acessando colunas\n",
    "\n",
    "![](https://pandas.pydata.org/docs/_images/03_subset_columns.svg)\n",
    "\n",
    "<p style=\"text-align:center;\">\n",
    "    Fonte: Documentação do Pandas [1]\n",
    "</p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "durable-strand",
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset[\"country\"] # Seleção de uma única coluna "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "tested-coupon",
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset[\"country\"].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "flexible-rings",
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset[[\"country\", \"date\", \"daily_vaccinations_raw\"]] # Seleção de várias colunas"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "suspected-accountability",
   "metadata": {},
   "source": [
    "# Filtrando linhas do dataset\n",
    "\n",
    "![](https://pandas.pydata.org/docs/_images/03_subset_rows.svg)\n",
    " \n",
    " <p style=\"text-align:center;\">\n",
    "    <b>Fonte</b>: Documentação do Pandas [1]\n",
    "</p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "experienced-marijuana",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Selecionar o andamento da vacinação no Brasil.\n",
    "\n",
    "imunization_in_brazil = dataset[dataset[\"country\"] == \"Brazil\"]\n",
    "imunization_in_brazil[[\"country\", \"total_vaccinations\", \"date\", \"source_website\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "static-lesson",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Selecionar as informações da última quinta e sexta-feira.\n",
    "\n",
    "last_thursday = \"2021-02-25\"\n",
    "last_friday = \"2021-02-26\"\n",
    "imunization_in_brazil[\n",
    "    (imunization_in_brazil[\"date\"] == last_friday) |\n",
    "    (imunization_in_brazil[\"date\"] == last_thursday)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "underlying-florence",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'imunization_in_brazil' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-1-e8fbe42f1650>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mimunization_in_brazil\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"date\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mlast_friday\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlast_thursday\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;31m#imunization_in_brazil[]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'imunization_in_brazil' is not defined"
     ]
    }
   ],
   "source": [
    "imunization_in_brazil[imunization_in_brazil[\"date\"].isin([last_friday, last_thursday])]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "brutal-passage",
   "metadata": {},
   "source": [
    "# Filtrando linhas e colunas do dataset\n",
    "\n",
    "\n",
    " ![](https://pandas.pydata.org/docs/_images/03_subset_columns_rows1.svg)\n",
    " \n",
    " <p style=\"text-align:center;\">\n",
    "    <b>Fonte</b>: Documentação do Pandas [1]\n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "higher-count",
   "metadata": {},
   "source": [
    "### Filtrando através de labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "pleasant-failing",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Selecionar o total de pessoas vacinadas\n",
    "# na última sexta-feira no Brazil e na Argentina.\n",
    "\n",
    "imunization_br_arg = dataset[dataset[\"country\"].isin([\"Brazil\", \"Argentina\"])]\n",
    "imunization_br_arg.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "induced-falls",
   "metadata": {},
   "outputs": [],
   "source": [
    "br_arg_last_friday = imunization_br_arg.loc[\n",
    "    imunization_br_arg[\"date\"] == last_friday,\n",
    "    \"country\":\"people_vaccinated\"\n",
    "]\n",
    "\n",
    "br_arg_last_friday"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "needed-plate",
   "metadata": {},
   "outputs": [],
   "source": [
    "br_arg_last_friday.loc[:, [\"country\", \"date\", \"total_vaccinations\"]]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "noted-palmer",
   "metadata": {},
   "source": [
    "### Filtrando através de índices "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "constitutional-particular",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Selecionar o total de pessoas vacinadas\n",
    "# na última sexta-feira no Brazil e na Argentina.\n",
    "\n",
    "imunization_br_arg = dataset[dataset[\"country\"].isin([\"Brazil\", \"Argentina\"])]\n",
    "\n",
    "br_arg_last_friday = imunization_br_arg[\n",
    "    imunization_br_arg[\"date\"] == last_friday]\n",
    "\n",
    "br_arg_last_friday.iloc[:1, 0:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "literary-consideration",
   "metadata": {},
   "outputs": [],
   "source": [
    "br_arg_last_friday"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "passive-algebra",
   "metadata": {},
   "source": [
    "\n",
    "# Funções úteis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "statutory-schema",
   "metadata": {},
   "source": [
    "### value_counts\n",
    "\n",
    "Conta o número de entradas em cada categoria de uma variável"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dress-pressing",
   "metadata": {},
   "outputs": [],
   "source": [
    "amount_of_days = dataset[\"country\"].value_counts()\n",
    "print(\"Imunização no Brasil iniciou à\", amount_of_days[\"Brazil\"], \"dias\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "imperial-reward",
   "metadata": {},
   "source": [
    "### fillna (fill NaN)\n",
    "\n",
    "Substitui valores nulos como o valor especificado"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "collected-steel",
   "metadata": {},
   "outputs": [],
   "source": [
    "people_fully_vaccinated_br = dataset.loc[\n",
    "    dataset[\"country\"] == \"Brazil\",\n",
    "    [\"country\", \"date\", \"people_fully_vaccinated\"]]\n",
    "\n",
    "filled_with_zeros = people_fully_vaccinated_br[\"people_fully_vaccinated\"].fillna(0)\n",
    "\n",
    "people_fully_vaccinated_br[\"people_fully_vaccinated\"] = filled_with_zeros\n",
    "\n",
    "people_fully_vaccinated_br\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "subjective-vector",
   "metadata": {},
   "source": [
    "### Nunique (number of unique)\n",
    "\n",
    "Conta a quantidade de valores distintos que a coluna especificada tem"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "republican-benchmark",
   "metadata": {},
   "outputs": [],
   "source": [
    "country_amount = dataset[\"country\"].nunique()\n",
    "print(\"Quantidade de países distintos presentes no dataset\", country_amount)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "civil-astronomy",
   "metadata": {},
   "source": [
    "### Sort\n",
    "\n",
    "Ordena os valores de uma coluna"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "offshore-relation",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Ordenar os países pela taxa de pessoas vacinadas (%)\n",
    "\n",
    "imun_last_friday = dataset[dataset[\"date\"] == last_friday]\n",
    "\n",
    "imun_last_friday = imun_last_friday.loc[\n",
    "    imun_last_friday[\"people_fully_vaccinated_per_hundred\"].notna(),\n",
    "    [\"country\",\"date\",\"people_fully_vaccinated_per_hundred\"]]\n",
    "\n",
    "imun_last_friday = imun_last_friday.sort_values(by=\"people_fully_vaccinated_per_hundred\", ascending=False)\n",
    "\n",
    "# List comprehension ─ explicar isso\n",
    "imun_last_friday[\"rank\"] = [i for i in range(1, imun_last_friday.shape[0]+1)]\n",
    "\n",
    "imun_last_friday"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "crazy-appreciation",
   "metadata": {},
   "source": [
    "### Apply\n",
    "\n",
    "Executa uma função em cada valor de uma coluna."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "addressed-corrections",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>iso_code</th>\n",
       "      <th>date</th>\n",
       "      <th>total_vaccinations</th>\n",
       "      <th>people_vaccinated</th>\n",
       "      <th>people_fully_vaccinated</th>\n",
       "      <th>daily_vaccinations_raw</th>\n",
       "      <th>daily_vaccinations</th>\n",
       "      <th>total_vaccinations_per_hundred</th>\n",
       "      <th>people_vaccinated_per_hundred</th>\n",
       "      <th>people_fully_vaccinated_per_hundred</th>\n",
       "      <th>daily_vaccinations_per_million</th>\n",
       "      <th>vaccines</th>\n",
       "      <th>source_name</th>\n",
       "      <th>source_website</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1404</th>\n",
       "      <td>Falkland Islands</td>\n",
       "      <td>FLK</td>\n",
       "      <td>2021-02-07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Oxford/AstraZeneca</td>\n",
       "      <td>Government of the Falkland Islands</td>\n",
       "      <td>https://www.facebook.com/FalkIandsGov/posts/42...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1405</th>\n",
       "      <td>Falkland Islands</td>\n",
       "      <td>FLK</td>\n",
       "      <td>2021-02-08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>189.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54264.0</td>\n",
       "      <td>Oxford/AstraZeneca</td>\n",
       "      <td>Government of the Falkland Islands</td>\n",
       "      <td>https://www.facebook.com/FalkIandsGov/posts/42...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1406</th>\n",
       "      <td>Falkland Islands</td>\n",
       "      <td>FLK</td>\n",
       "      <td>2021-02-09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>189.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54264.0</td>\n",
       "      <td>Oxford/AstraZeneca</td>\n",
       "      <td>Government of the Falkland Islands</td>\n",
       "      <td>https://www.facebook.com/FalkIandsGov/posts/42...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1407</th>\n",
       "      <td>Falkland Islands</td>\n",
       "      <td>FLK</td>\n",
       "      <td>2021-02-10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>189.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54264.0</td>\n",
       "      <td>Oxford/AstraZeneca</td>\n",
       "      <td>Government of the Falkland Islands</td>\n",
       "      <td>https://www.facebook.com/FalkIandsGov/posts/42...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1408</th>\n",
       "      <td>Falkland Islands</td>\n",
       "      <td>FLK</td>\n",
       "      <td>2021-02-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>189.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54264.0</td>\n",
       "      <td>Oxford/AstraZeneca</td>\n",
       "      <td>Government of the Falkland Islands</td>\n",
       "      <td>https://www.facebook.com/FalkIandsGov/posts/42...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1409</th>\n",
       "      <td>Falkland Islands</td>\n",
       "      <td>FLK</td>\n",
       "      <td>2021-02-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>189.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54264.0</td>\n",
       "      <td>Oxford/AstraZeneca</td>\n",
       "      <td>Government of the Falkland Islands</td>\n",
       "      <td>https://www.facebook.com/FalkIandsGov/posts/42...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1410</th>\n",
       "      <td>Falkland Islands</td>\n",
       "      <td>FLK</td>\n",
       "      <td>2021-02-13</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>189.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54264.0</td>\n",
       "      <td>Oxford/AstraZeneca</td>\n",
       "      <td>Government of the Falkland Islands</td>\n",
       "      <td>https://www.facebook.com/FalkIandsGov/posts/42...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1411</th>\n",
       "      <td>Falkland Islands</td>\n",
       "      <td>FLK</td>\n",
       "      <td>2021-02-14</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>189.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54264.0</td>\n",
       "      <td>Oxford/AstraZeneca</td>\n",
       "      <td>Government of the Falkland Islands</td>\n",
       "      <td>https://www.facebook.com/FalkIandsGov/posts/42...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412</th>\n",
       "      <td>Falkland Islands</td>\n",
       "      <td>FLK</td>\n",
       "      <td>2021-02-15</td>\n",
       "      <td>1515.0</td>\n",
       "      <td>1515.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>189.0</td>\n",
       "      <td>43.5</td>\n",
       "      <td>43.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54264.0</td>\n",
       "      <td>Oxford/AstraZeneca</td>\n",
       "      <td>Government of the Falkland Islands</td>\n",
       "      <td>https://www.facebook.com/FalkIandsGov/posts/42...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               country iso_code        date  total_vaccinations  \\\n",
       "1404  Falkland Islands      FLK  2021-02-07                 0.0   \n",
       "1405  Falkland Islands      FLK  2021-02-08                 NaN   \n",
       "1406  Falkland Islands      FLK  2021-02-09                 NaN   \n",
       "1407  Falkland Islands      FLK  2021-02-10                 NaN   \n",
       "1408  Falkland Islands      FLK  2021-02-11                 NaN   \n",
       "1409  Falkland Islands      FLK  2021-02-12                 NaN   \n",
       "1410  Falkland Islands      FLK  2021-02-13                 NaN   \n",
       "1411  Falkland Islands      FLK  2021-02-14                 NaN   \n",
       "1412  Falkland Islands      FLK  2021-02-15              1515.0   \n",
       "\n",
       "      people_vaccinated  people_fully_vaccinated  daily_vaccinations_raw  \\\n",
       "1404                0.0                      NaN                     NaN   \n",
       "1405                NaN                      NaN                     NaN   \n",
       "1406                NaN                      NaN                     NaN   \n",
       "1407                NaN                      NaN                     NaN   \n",
       "1408                NaN                      NaN                     NaN   \n",
       "1409                NaN                      NaN                     NaN   \n",
       "1410                NaN                      NaN                     NaN   \n",
       "1411                NaN                      NaN                     NaN   \n",
       "1412             1515.0                      NaN                     NaN   \n",
       "\n",
       "      daily_vaccinations  total_vaccinations_per_hundred  \\\n",
       "1404                 NaN                             0.0   \n",
       "1405               189.0                             NaN   \n",
       "1406               189.0                             NaN   \n",
       "1407               189.0                             NaN   \n",
       "1408               189.0                             NaN   \n",
       "1409               189.0                             NaN   \n",
       "1410               189.0                             NaN   \n",
       "1411               189.0                             NaN   \n",
       "1412               189.0                            43.5   \n",
       "\n",
       "      people_vaccinated_per_hundred  people_fully_vaccinated_per_hundred  \\\n",
       "1404                            0.0                                  NaN   \n",
       "1405                            NaN                                  NaN   \n",
       "1406                            NaN                                  NaN   \n",
       "1407                            NaN                                  NaN   \n",
       "1408                            NaN                                  NaN   \n",
       "1409                            NaN                                  NaN   \n",
       "1410                            NaN                                  NaN   \n",
       "1411                            NaN                                  NaN   \n",
       "1412                           43.5                                  NaN   \n",
       "\n",
       "      daily_vaccinations_per_million            vaccines  \\\n",
       "1404                             NaN  Oxford/AstraZeneca   \n",
       "1405                         54264.0  Oxford/AstraZeneca   \n",
       "1406                         54264.0  Oxford/AstraZeneca   \n",
       "1407                         54264.0  Oxford/AstraZeneca   \n",
       "1408                         54264.0  Oxford/AstraZeneca   \n",
       "1409                         54264.0  Oxford/AstraZeneca   \n",
       "1410                         54264.0  Oxford/AstraZeneca   \n",
       "1411                         54264.0  Oxford/AstraZeneca   \n",
       "1412                         54264.0  Oxford/AstraZeneca   \n",
       "\n",
       "                             source_name  \\\n",
       "1404  Government of the Falkland Islands   \n",
       "1405  Government of the Falkland Islands   \n",
       "1406  Government of the Falkland Islands   \n",
       "1407  Government of the Falkland Islands   \n",
       "1408  Government of the Falkland Islands   \n",
       "1409  Government of the Falkland Islands   \n",
       "1410  Government of the Falkland Islands   \n",
       "1411  Government of the Falkland Islands   \n",
       "1412  Government of the Falkland Islands   \n",
       "\n",
       "                                         source_website  \n",
       "1404  https://www.facebook.com/FalkIandsGov/posts/42...  \n",
       "1405  https://www.facebook.com/FalkIandsGov/posts/42...  \n",
       "1406  https://www.facebook.com/FalkIandsGov/posts/42...  \n",
       "1407  https://www.facebook.com/FalkIandsGov/posts/42...  \n",
       "1408  https://www.facebook.com/FalkIandsGov/posts/42...  \n",
       "1409  https://www.facebook.com/FalkIandsGov/posts/42...  \n",
       "1410  https://www.facebook.com/FalkIandsGov/posts/42...  \n",
       "1411  https://www.facebook.com/FalkIandsGov/posts/42...  \n",
       "1412  https://www.facebook.com/FalkIandsGov/posts/42...  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "falkland = dataset.loc[dataset[\"country\"] == \"Falkland Islands\"]\n",
    "\n",
    "def set_nan_to_none(arg):\n",
    "    return arg + 1\n",
    "\n",
    "#falkland[[\"total_vaccinations\", \"people_vaccinated\"]].apply(set_nan_to_none)\n",
    "falkland"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "municipal-chain",
   "metadata": {},
   "source": [
    "# Manipulando Strings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "collected-stretch",
   "metadata": {},
   "outputs": [],
   "source": [
    "brazil = dataset[dataset[\"country\"] == \"Brazil\"]\n",
    "brazil[\"vaccines\"].str.split(\",\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "sized-qatar",
   "metadata": {},
   "source": [
    "# Referências\n",
    "\n",
    "[[1]](https://pandas.pydata.org/docs) Documentação do Pandas\n",
    "\n",
    "[[2]](https://www.kaggle.com/gpreda/covid-world-vaccination-progress) Dataset do progresso da vacinação mundial contra a Covid-19\n",
    "\n",
    "[[3]](https://www.w3schools.com/python/python_lists_comprehension.asp) Compreensão de listas em python W3Schools\n",
    "\n",
    "[[4]](https://pandas.pydata.org/Pandas_Cheat_Sheet.pdf) Pandas Cheat Sheet"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
